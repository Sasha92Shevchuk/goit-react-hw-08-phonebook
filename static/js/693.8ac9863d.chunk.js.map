{"version":3,"file":"static/js/693.8ac9863d.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/CommonStyles/CommonStyles.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  font-weight: bold;\n  color: #4a4a4a;\n  input {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    margin-top: 5px;\n    font-size: 16px;\n  }\n`;\n\nexport const Submit = styled.button`\n  background-color: #bbd1bdfc;\n  font-weight: bold;\n  color: #4a4a4a;\n  margin-top: 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: color 250ms ease-in-out;\n  :before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    opacity: 0.3;\n    transform: skewX(-30deg);\n    transition: left 250ms ease-in-out;\n    z-index: -1;\n  }\n  :hover {\n    color: #fff;\n\n    :before {\n      left: 100%;\n    }\n  }\n`;\n// export const Submit = styled.button`\n//   background-color: #4e54c8;\n//   color: #fff;\n//   padding: 10px 20px;\n//   border: none;\n//   border-radius: 5px;\n//   cursor: pointer;\n//   transition: background-color 0.2s ease-in-out;\n//   margin-top: 20px;\n//   :hover {\n//     background-color: #8f94fb;\n//   }\n// `;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  font-weight: bold;\n  color: #4a4a4a;\n  input {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    margin-top: 5px;\n    font-size: 16px;\n  }\n`;\n\nexport const Submit = styled.button`\n  background-color: #bbd1bdfc;\n  font-weight: bold;\n  color: #4a4a4a;\n  margin-top: 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: color 250ms ease-in-out;\n  :before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    opacity: 0.3;\n    transform: skewX(-30deg);\n    transition: left 250ms ease-in-out;\n    z-index: -1;\n  }\n  :hover {\n    color: #fff;\n\n    :before {\n      left: 100%;\n    }\n  }\n`;\n","import React from 'react';\nimport { Form, Label, Submit } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    dispatch(addContact({ name: name.value, number: number.value }));\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Submit type=\"submit\">Add contact</Submit>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 0 20px;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: #bbd1bdfc;\n  border: none;\n  border-radius: 5px;\n  color: #333;\n  margin-left: auto;\n  padding: 10px;\n  cursor: pointer;\n  text-transform: uppercase;\n  transition: background-color 250ms ease;\n  :hover {\n    background-color: #c8ddc9fc;\n  }\n`;\n","import { Box, BtnDelete, Image, Item } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nexport const Contact = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <Image\n        src={`https://ui-avatars.com/api/?name=${name}&background=random&size=60&rounded=true`}\n        alt={name}\n      />\n      <Box>\n        <span>{name} </span>\n        <span> Mobile: {number}</span>\n      </Box>\n      <BtnDelete type=\"button\" onClick={handleDelete}>\n        Delete\n      </BtnDelete>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  /* display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n  \n  list-style-position: inside; */\n  padding: 0;\n  margin: 0;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, query) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(query)\n    );\n  }\n);\n","import { Contact } from '../Contact';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilterContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(item => (\n        <Contact key={item.id} item={item} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n","import { FilterBox } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/filterSlice';\nimport { Label } from 'components/RegisterForm/RegisterForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInputFilterChange = e => {\n    dispatch(filteredContacts(e.target.value));\n  };\n  return (\n    <FilterBox>\n      <Label>\n        Find contacs by name\n        <input type=\"text\" name=\"filter\" onChange={handleInputFilterChange} />\n      </Label>\n    </FilterBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Filter } from 'components/Filter';\nimport { Title, Wrapper } from 'components/CommonStyles/CommonStyles';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n}\n"],"names":["Form","styled","Label","Submit","ContactForm","dispatch","useDispatch","onSubmit","e","preventDefault","target","elements","name","number","addContact","value","reset","type","pattern","title","required","Item","Image","Box","BtnDelete","Contact","item","id","src","alt","onClick","deleteContact","List","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectIsLoading","state","contacts","isLoading","selectFilterContacts","items","filter","query","contact","toLowerCase","includes","ContactList","filteredContacts","useSelector","FilterBox","Filter","onChange","Wrapper","Title","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}