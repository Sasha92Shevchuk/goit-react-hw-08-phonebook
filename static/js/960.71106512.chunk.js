"use strict";(self.webpackChunkreact_homework_template=self.webpackChunkreact_homework_template||[]).push([[960],{960:function(n,e,t){t.r(e),t.d(e,{default:function(){return O}});var r,i,u,a=t(2791),o=t(9434),c=t(4270),l=t(168),s=t(4934),f=s.Z.form(r||(r=(0,l.Z)(["\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  border: 1px solid;\n  border-radius: 5px;\n  padding: 5px;\n"]))),p=s.Z.button(i||(i=(0,l.Z)(["\n  background-color: #fff;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 3px 6px;\n  cursor: pointer;\n  :hover {\n    background-color: lightgrey;\n  }\n"]))),d=t(208),m=t(184);function h(){var n=(0,o.I0)();return(0,m.jsxs)(f,{onSubmit:function(e){e.preventDefault();var t=e.target.elements,r=t.name,i=t.number;n((0,d.uK)({name:r.value,number:i.value})),e.target.reset()},children:[(0,m.jsx)("label",{htmlFor:"name",children:"Name "}),(0,m.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),(0,m.jsx)("label",{htmlFor:"number",children:"Number"}),(0,m.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),(0,m.jsx)(p,{type:"submit",children:"Add contact"})]})}var x,v=s.Z.li(u||(u=(0,l.Z)(["\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n"]))),y=function(n){var e=n.item,t=e.id,r=e.name,i=e.number,u=(0,o.I0)();return(0,m.jsxs)(v,{children:[(0,m.jsxs)("span",{children:[r,": "]}),(0,m.jsx)("span",{children:i}),(0,m.jsx)(p,{type:"button",onClick:function(){u((0,d.GK)(t))},children:"Delete"})]})},g=s.Z.ul(x||(x=(0,l.Z)(["\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n  padding: 0;\n  margin: 0;\n  list-style-position: inside;\n"]))),b="NOT_FOUND";var j=function(n,e){return n===e};function k(n,e){var t="object"===typeof e?e:{equalityCheck:e},r=t.equalityCheck,i=void 0===r?j:r,u=t.maxSize,a=void 0===u?1:u,o=t.resultEqualityCheck,c=function(n){return function(e,t){if(null===e||null===t||e.length!==t.length)return!1;for(var r=e.length,i=0;i<r;i++)if(!n(e[i],t[i]))return!1;return!0}}(i),l=1===a?function(n){var e;return{get:function(t){return e&&n(e.key,t)?e.value:b},put:function(n,t){e={key:n,value:t}},getEntries:function(){return e?[e]:[]},clear:function(){e=void 0}}}(c):function(n,e){var t=[];function r(n){var r=t.findIndex((function(t){return e(n,t.key)}));if(r>-1){var i=t[r];return r>0&&(t.splice(r,1),t.unshift(i)),i.value}return b}return{get:r,put:function(e,i){r(e)===b&&(t.unshift({key:e,value:i}),t.length>n&&t.pop())},getEntries:function(){return t},clear:function(){t=[]}}}(a,c);function s(){var e=l.get(arguments);if(e===b){if(e=n.apply(null,arguments),o){var t=l.getEntries(),r=t.find((function(n){return o(n.value,e)}));r&&(e=r.value)}l.put(arguments,e)}return e}return s.clearCache=function(){return l.clear()},s}function w(n){var e=Array.isArray(n[0])?n[0]:n;if(!e.every((function(n){return"function"===typeof n}))){var t=e.map((function(n){return"function"===typeof n?"function "+(n.name||"unnamed")+"()":typeof n})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+t+"]")}return e}function Z(n){for(var e=arguments.length,t=new Array(e>1?e-1:0),r=1;r<e;r++)t[r-1]=arguments[r];var i=function(){for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];var u,a=0,o={memoizeOptions:void 0},c=r.pop();if("object"===typeof c&&(o=c,c=r.pop()),"function"!==typeof c)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof c+"]");var l=o,s=l.memoizeOptions,f=void 0===s?t:s,p=Array.isArray(f)?f:[f],d=w(r),m=n.apply(void 0,[function(){return a++,c.apply(null,arguments)}].concat(p)),h=n((function(){for(var n=[],e=d.length,t=0;t<e;t++)n.push(d[t].apply(null,arguments));return u=m.apply(null,n)}));return Object.assign(h,{resultFunc:c,memoizedResultFunc:m,dependencies:d,lastResult:function(){return u},recomputations:function(){return a},resetRecomputations:function(){return a=0}}),h};return i}var A,C=Z(k),F=function(n){return n.contacts.isLoading},z=C([function(n){return n.contacts.items},function(n){return n.filter}],(function(n,e){return n.filter((function(n){return n.name.toLowerCase().includes(e)}))})),q=function(){var n=(0,o.v9)(z);return(0,m.jsx)(g,{children:n.map((function(n){return(0,m.jsx)(y,{item:n},n.id)}))})},E=s.Z.div(A||(A=(0,l.Z)(["\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n"]))),I=t(6895),N=function(){var n=(0,o.I0)();return(0,m.jsxs)(E,{children:[(0,m.jsx)("label",{htmlFor:"filter",children:"Find contacs by name"}),(0,m.jsx)("input",{type:"text",name:"filter",onChange:function(e){n((0,I.z)(e.target.value))}})]})};function O(){var n=(0,o.I0)(),e=(0,o.v9)(F);return(0,a.useEffect)((function(){n((0,d.yF)())}),[n]),(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(c.q,{children:(0,m.jsx)("title",{children:"Your contacts"})}),(0,m.jsx)(h,{}),(0,m.jsx)("div",{children:e&&"Request in progress..."}),(0,m.jsx)("h2",{children:"Contacts"}),(0,m.jsx)(N,{}),(0,m.jsx)(q,{})]})}}}]);
//# sourceMappingURL=960.71106512.chunk.js.map