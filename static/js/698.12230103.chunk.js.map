{"version":3,"file":"static/js/698.12230103.chunk.js","mappings":"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","sources":["components/CommonStyles/CommonStyles.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\nexport const ContactNav = styled.div`\n  margin: 0;\n  padding: 0 20px;\n  display: flex;\n  flex-direction: row;\n  gap: 40px;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0;\n`;\n\nexport const H1 = styled.h1`\n  font-size: 48px;\n  font-weight: 500;\n  text-align: center;\n  margin: 0;\n  background-image: linear-gradient(90deg, #11f12d, #11aff1);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nexport const Box = styled.div`\n  min-height: calc(100vh - 200px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const BtnAddContact = styled.button`\n  background-color: #f3bf3c;\n  border: none;\n  border-radius: 50%;\n  color: #646363;\n  width: 60px;\n  height: 60px;\n  padding: 0;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  transition: background-color 250ms ease;\n  transition: color 250ms ease;\n  :hover {\n    background-color: #bbd1bdfc;\n    color: #fff;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n \n  font-weight: bold;\n  color: #4a4a4a;\n  input {\n    width: 210px;\n    height: 20px;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n    margin-top: 5px;\n    font-size: 16px;\n  }\n`;\n\nexport const Submit = styled.button`\n  width: 40px;\n  height: 40px;\n  background-color: #bbd1bdfc;\n  font-weight: bold;\n  color: #4a4a4a;\n  margin-left: 20px;\n  padding: 0;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: color 250ms ease-in-out;\n  :before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    opacity: 0.3;\n    transform: skewX(-30deg);\n    transition: left 250ms ease-in-out;\n    z-index: -1;\n  }\n  :hover {\n    color: #fff;\n\n    :before {\n      left: 100%;\n    }\n  }\n`;\n","import React from 'react';\nimport { Form, Label, Submit } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectFilterContacts, selectIsLoading } from 'redux/selectors';\nimport { toast } from 'react-toastify';\nimport { FaCheckCircle } from 'react-icons/fa';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const existingContacts = useSelector(selectFilterContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    if (name.value === '') {\n      toast.error('Please, enter name');\n    }\n    if (number.value.length < 12 || number.value.length > 12) {\n      toast.warning('The number must consist of 12 digits');\n      return;\n    }\n\n    if (existingContacts.some(contact => contact.name === name.value)) {\n      toast.warning('Contact with that name already exists');\n      return;\n    }\n    if (existingContacts.some(contact => contact.number === number.value)) {\n      toast.warning('Contact with that number already exists');\n      return;\n    }\n    dispatch(addContact({ name: name.value, number: number.value }));\n    toast.success(`Contact \"${name.value.toUpperCase()}\" has been added`);\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Submit type=\"submit\" disabled={loading}>\n        <FaCheckCircle size={24} />\n      </Submit>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 0 20px;\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  min-width: 800px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: #bbd1bdfc;\n  border: none;\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n  color: #646363;\n  margin-left: 20px;\n  padding: 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  transition: background-color 250ms ease;\n  transition: color 250ms ease;\n  :hover {\n    background-color: #c8ddc9fc;\n    color: #fff;\n  }\n`;\nexport const BtnEdit = styled.button`\n  background-color: #c8ddc9fc;\n  border: none;\n  border-radius: 5px;\n  color: #646363;\n  margin-left: auto;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  transition: background-color 250ms ease;\n  transition: color 250ms ease;\n  :hover {\n    background-color: #bbd1bdfc;\n    color: #fff;\n  }\n`;\n","import { Box, BtnDelete, BtnEdit, Image, Item } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { toast } from 'react-toastify';\nimport { RiDeleteBinLine, RiEdit2Line } from 'react-icons/ri';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nexport const Contact = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const navigate = useNavigate();\n\n  const handleEdit = editId => {\n    navigate(`/contacts/edit/${editId}`);\n  };\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.success(`Contact \"${name.toUpperCase()}\" has been deleted`);\n  };\n\n  return (\n    <>\n      <Item>\n        <Image\n          src={`https://ui-avatars.com/api/?name=${name}&background=random&size=60&rounded=true`}\n          alt={name}\n        />\n        <Box>\n          <span>{name} </span>\n          <span> Mobile: {number}</span>\n        </Box>\n        <BtnEdit\n          type=\"button\"\n          disabled={loading}\n          onClick={() => handleEdit(id)}\n        >\n          <RiEdit2Line size={24} />\n        </BtnEdit>\n\n        <BtnDelete type=\"button\" onClick={handleDelete} disabled={loading}>\n          <RiDeleteBinLine size={24} />\n        </BtnDelete>\n      </Item>\n      <Outlet />\n    </>\n  );\n};\n\nContact.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n","import { Contact } from '../Contact';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilterContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(item => (\n        <Contact key={item.id} item={item} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n","import { FilterBox } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/filterSlice';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInputFilterChange = e => {\n    dispatch(filteredContacts(e.target.value));\n  };\n  return (\n    <FilterBox>\n      <Label>\n        Find contacs by name\n        <input type=\"text\" name=\"filter\" onChange={handleInputFilterChange} />\n      </Label>\n    </FilterBox>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Filter } from 'components/Filter';\nimport {\n  BtnAddContact,\n  ContactNav,\n  Title,\n  Wrapper,\n} from 'components/CommonStyles/CommonStyles';\nimport Loader from 'components/Loader/Loader';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const [showAddForm, setShowAddForm] = useState(false);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleToogleForm = () => {\n    setShowAddForm(prevState => !prevState);\n  };\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Title>Contacts</Title>\n      <ContactNav>\n        <Filter />\n        <BtnAddContact onClick={handleToogleForm}>\n          <AiOutlineUserAdd size={32} />\n        </BtnAddContact>\n        {showAddForm && <ContactForm />}\n      </ContactNav>\n      {isLoading ? <Loader /> : <ContactList />}\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","ContactNav","Title","H1","Box","BtnAddContact","Form","Label","Submit","ContactForm","dispatch","useDispatch","loading","useSelector","selectIsLoading","existingContacts","selectFilterContacts","onSubmit","e","preventDefault","target","elements","name","number","value","toast","length","some","contact","addContact","toUpperCase","reset","type","pattern","title","required","disabled","size","Item","Image","BtnDelete","BtnEdit","Contact","item","id","navigate","useNavigate","src","alt","onClick","deleteContact","List","ContactList","filteredContacts","map","FilterBox","Filter","onChange","Contacts","isLoading","useState","showAddForm","setShowAddForm","useEffect","fetchContacts","Helmet","prevState","Loader"],"sourceRoot":""}